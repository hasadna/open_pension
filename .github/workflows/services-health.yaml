name: Services helath

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

#  endpoint-health:
#    runs-on: ubuntu-20.04
#
#    strategy:
#      matrix:
#        node-version: [ 16.9.0 ]
#
#    steps:
#      - uses: actions/checkout@v2
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v1
#        with:
#          node-version: ${{ matrix.node-version }}
#
#      - name: Fire up docker services
#        run: |
#          docker-compose up -d front backoffice backoffice_backend storage monthly
#
#      - name: Install packages
#        run: |
#          cd services-health-checker
#          npm i
#
#      - name: Run tests
#        run: |
#          cd services-health-checker
#          # Sleeping three minutes so the container would done to build.
#          sleep 180
#          npm run test

  services-sanity:
   runs-on: ubuntu-20.04
#
#    needs:
#      - endpoint-health

   strategy:
     matrix:
       node-version: [ 14.17.1 ]

   steps:
     # todo: run only when the commit have run-e2e-sanity
     - uses: actions/checkout@v2
     - name: Use Node.js ${{ matrix.node-version }}
       uses: actions/setup-node@v1
       with:
         node-version: ${{ matrix.node-version }}
     - name: browser-actions/setup-chrome@latest
       run: |
         npm install -g webdriver-manager
         webdriver-manager update
         webdriver-manager --detach start
         sleep 20
         webdriver-manager status

     - name: Enabling ngrok
       run: |
         curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null &&
                       echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list &&
                       sudo apt update && sudo apt install ngrok

         ngrok authtoken ${{ secrets.NGROK_TOKEN }}


     - name: Fire up docker services
       run: |
         docker-compose up -d front backoffice backoffice_backend storage monthly

     - name: Prepare env stuff
       run: |
         # Sleeping three minutes so the container would done to build.
         sleep 180

         # todo: create here a user and run the sanity tests of login and verify the front works
         curl http://localhost:1000

         docker-compose exec -T backoffice_backend npm run cli:createUser -- --username=admin -- --email=foo@openpension.org.il -- --password=admin

     - name: Install testim
       shell: bash
       env:
        TESTIM_TOKEN: ${{ secrets.TESTIM_TOKEN }}
        TESTIM_PROJECT: ${{ secrets.TESTIM_PROJECT }}
       run: |
         npm i -g @testim/testim-cli
         testim --token "${{ secrets.TESTIM_TOKEN }}" --project "${{ secrets.TESTIM_PROJECT }}" --user "${{ secrets.TESTIM_USER }}" --host "127.0.0.1"
